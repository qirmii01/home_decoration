package com.hd.domain;

import java.io.Serializable;

public class DesignerWithBLOBs extends Designer implements Serializable {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column designer.introduce
     *
     * @mbg.generated
     */
    private String introduce;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column designer.record
     *
     * @mbg.generated
     */
    private String record;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table designer
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbg.generated
     */
    public DesignerWithBLOBs(String id, String userId, String serviceAddress, Long designAmountLow, Long designAmountHigh, Float engageTime, String introduce, String record) {
        super(id, userId, serviceAddress, designAmountLow, designAmountHigh, engageTime);
        this.introduce = introduce;
        this.record = record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbg.generated
     */
    public DesignerWithBLOBs() {
        super();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column designer.introduce
     *
     * @return the value of designer.introduce
     *
     * @mbg.generated
     */
    public String getIntroduce() {
        return introduce;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column designer.introduce
     *
     * @param introduce the value for designer.introduce
     *
     * @mbg.generated
     */
    public void setIntroduce(String introduce) {
        this.introduce = introduce == null ? null : introduce.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column designer.record
     *
     * @return the value of designer.record
     *
     * @mbg.generated
     */
    public String getRecord() {
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column designer.record
     *
     * @param record the value for designer.record
     *
     * @mbg.generated
     */
    public void setRecord(String record) {
        this.record = record == null ? null : record.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        DesignerWithBLOBs other = (DesignerWithBLOBs) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getUserId() == null ? other.getUserId() == null : this.getUserId().equals(other.getUserId()))
            && (this.getServiceAddress() == null ? other.getServiceAddress() == null : this.getServiceAddress().equals(other.getServiceAddress()))
            && (this.getDesignAmountLow() == null ? other.getDesignAmountLow() == null : this.getDesignAmountLow().equals(other.getDesignAmountLow()))
            && (this.getDesignAmountHigh() == null ? other.getDesignAmountHigh() == null : this.getDesignAmountHigh().equals(other.getDesignAmountHigh()))
            && (this.getEngageTime() == null ? other.getEngageTime() == null : this.getEngageTime().equals(other.getEngageTime()))
            && (this.getIntroduce() == null ? other.getIntroduce() == null : this.getIntroduce().equals(other.getIntroduce()))
            && (this.getRecord() == null ? other.getRecord() == null : this.getRecord().equals(other.getRecord()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getUserId() == null) ? 0 : getUserId().hashCode());
        result = prime * result + ((getServiceAddress() == null) ? 0 : getServiceAddress().hashCode());
        result = prime * result + ((getDesignAmountLow() == null) ? 0 : getDesignAmountLow().hashCode());
        result = prime * result + ((getDesignAmountHigh() == null) ? 0 : getDesignAmountHigh().hashCode());
        result = prime * result + ((getEngageTime() == null) ? 0 : getEngageTime().hashCode());
        result = prime * result + ((getIntroduce() == null) ? 0 : getIntroduce().hashCode());
        result = prime * result + ((getRecord() == null) ? 0 : getRecord().hashCode());
        return result;
    }
}