package com.hd.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.hd.domain.Designer;
import com.hd.domain.DesignerInfo;
import com.hd.domain.DesignerWithBLOBs;

public interface DesignerMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int insert(DesignerWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int insertSelective(DesignerWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	DesignerWithBLOBs selectByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(DesignerWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int updateByPrimaryKeyWithBLOBs(DesignerWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table designer
	 * @mbggenerated
	 */
	int updateByPrimaryKey(Designer record);

	/**
	 * 查询设计师信信息
	 * @param start 查询记录开始数
	 * @param end 查询记录结束数
	 * @param queryAllInfo 是否查询所有信息
	 * @return
	 */
    List<DesignerInfo> queryDesigner(@Param("start")int start,@Param("end")int end, @Param("queryAllInfo")boolean queryAllInfo);
    
    /**
     * 通过用户id和状态查询设计师信息
     * @param userId 用户id
     * @param status 状态
     * @return
     */
    List<DesignerWithBLOBs> queryDesignerInfo(String userId, String status);
}